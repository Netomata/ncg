###############################################################################
# Based on stock Nagios SWITCH.CFG - SAMPLE CONFIG FILE FOR MONITORING A SWITCH
#
# NOTES: This config file assumes that you are using the sample configuration
#	 files that get installed with the Nagios quickstart guide.
#
###############################################################################




###############################################################################
###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################
###############################################################################

# Define the switch that we'll be monitoring

define host{
	use		generic-switch		; Inherit default values from a template
	host_name	<%= @target["(...)!name"] %>	; The name we're giving to this switch
	alias		<%= @target["(...)!name"] %> - Cisco <%= @target["(...)!model"] %> Switch	; A longer name associated with the switch
	address		<%= @target["(...)!management_ip"] %>		; IP address of the switch
	hostgroups	network	; Host groups this switch is associated with
	}




###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################

# Create a service to PING to switch

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>	; The name of the host the service is associated with
	service_description	PING		; The service description
	check_command		check_ping!200.0,20%!600.0,60%	; The command used to monitor the service
	normal_check_interval	5		; Check the service every 5 minutes under normal conditions
	retry_check_interval	1		; Re-check the service every minute until its final/hard state is determined
	}


# Monitor uptime via SNMP

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Uptime
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -m ALL -o sysUpTime.0
	}

# Monitor CPU load via SNMP
#	cpmCPUTotal5minRev	1.3.6.1.4.1.9.9.109.1.1.1.1.8
#	cpmCPUTotal1minRev	1.3.6.1.4.1.9.9.109.1.1.1.1.7
#	cpmCPUTotal5secRev	1.3.6.1.4.1.9.9.109.1.1.1.1.6

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	CPU Load
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "% 5min,% 1min,% 5sec" -D ", " -m ALL -o 1.3.6.1.4.1.9.9.109.1.1.1.1.8.1,1.3.6.1.4.1.9.9.109.1.1.1.1.7.1,1.3.6.1.4.1.9.9.109.1.1.1.1.6.1 -w 10,10,10 -c 50,50,50
	}

# Monitor memory usage via SNMP
#	ciscoMemoryPoolFree	1.3.6.1.4.1.9.9.48.1.1.1.6
#		CPU:		1.3.6.1.4.1.9.9.48.1.1.1.6.1
#		IO:		1.3.6.1.4.1.9.9.48.1.1.1.6.2
#
#	16777216 = 16 MB
#	 8388608 = 8 MB
#	 4194304 = 4 MB
#	 2097152 = 2 MB

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Memory
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "bytes (CPU),bytes (IO)" -D ", " -m ALL -o 1.3.6.1.4.1.9.9.48.1.1.1.6.1,1.3.6.1.4.1.9.9.48.1.1.1.6.2 -w 16777216:,4194304: -c 8388608:,2097152:
	}

# Monitor temperature via SNMP
#	ciscoEnvMonTemperatureState	1.3.6.1.4.1.9.9.13.1.3.1.6
#
#	CiscoEnvMonState 
#		1 = normal
#		2 = warning
#		3 = critical
#		4 = shutdown
#		5 = notPresent
#		6 = notFunctioning

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Temperature
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "(1=normal 2=warning 3=critical 4=shutdown 5=notPresent 6=notFunctioning)" -m ALL -o 1.3.6.1.4.1.9.9.13.1.3.1.6.1 -w :1 -c :2
	}

# Monitor fan via SNMP
#	ciscoEnvMonFanState	1.3.6.1.4.1.9.9.13.1.4.1.3
#
#	CiscoEnvMonState 
#		1 = normal
#		2 = warning
#		3 = critical
#		4 = shutdown
#		5 = notPresent
#		6 = notFunctioning

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Fan
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "(1=normal 2=warning 3=critical 4=shutdown 5=notPresent 6=notFunctioning)" -m ALL -o 1.3.6.1.4.1.9.9.13.1.4.1.3.1 -w :1 -c :2
	}

# Monitor power supply via SNMP
#	ciscoEnvMonSupplyState	1.3.6.1.4.1.9.9.13.1.5.1.3
#
#	CiscoEnvMonState 
#		1 = normal
#		2 = warning
#		3 = critical
#		4 = shutdown
#		5 = notPresent
#		6 = notFunctioning

define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Power Supply 1
	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "(1=normal 2=warning 3=critical 4=shutdown 5=notPresent 6=notFunctioning)" -m ALL -o 1.3.6.1.4.1.9.9.13.1.5.1.3.1 -w :1 -c :2
	}

# define service{
# 	use			generic-service	; Inherit values from a template
# 	host_name		<%= @target["(...)!name"] %>
# 	service_description	Power Supply 2
# 	check_command		check_snmp!-C <%= @target["(...)!snmp_community"] %> -u "(1=normal 2=warning 3=critical 4=shutdown 5=notPresent 6=notFunctioning)" -m ALL -o 1.3.6.1.4.1.9.9.13.1.5.1.3.2 -w :1 -c :2
# 	}

# Monitor status of all defined interfaces
define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Interfaces
	check_command		check_ifstatus!-C <%= @target["(...)!snmp_community"] %> -v 2 -I
	}

# Monitor status of each interface individually
<% @target["(...)!interfaces"].each { |key,interface|
if (interface["active"] == "yes") then -%>
define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Interface <%= interface["name"] %> [<%= interface["target"] %>]
	check_command		check_ifoperstatus!-C <%= interface["(...)!snmp_community"] %> -v 2 -I -d <%= interface["name"] %>
	}

<% end
} -%>

<% @target["!vlans"].each { |key,vlan|
if (vlan["active"] == "yes") then -%>
define service{
	use			generic-service	; Inherit values from a template
	host_name		<%= @target["(...)!name"] %>
	service_description	Interface Vlan<%= vlan["id"] %> [<%= vlan["name"] %>]
	check_command		check_ifoperstatus!-C <%= vlan["(...)!snmp_community"] %> -v 2 -I -d Vlan<%= vlan["id"] %>
	}

<% end
} -%>
